clusterDomain: cluster.local

image:
  repository: quay.io/minio/minio
  tag: RELEASE.2024-04-18T19-09-19Z
  pullPolicy: IfNotPresent

mcImage:
  repository: quay.io/minio/mc
  tag: RELEASE.2024-04-18T16-45-29Z
  pullPolicy: IfNotPresent

mode: distributed ## other supported values are "standalone"

minioAPIPort: "9000"

minioConsolePort: "9001"

deploymentUpdate:
  type: RollingUpdate
  maxUnavailable: 0
  maxSurge: 100%

statefulSetUpdate:
  updateStrategy: RollingUpdate

priorityClassName: ""

runtimeClassName: ""

rootUser: ""
rootPassword: ""

existingSecret: ""

certsPath: "/etc/minio/certs/"
configPathmc: "/etc/minio/mc/"

mountPath: "/export"
bucketRoot: ""

drivesPerNode: 1
replicas: 2
pools: 1

trustedCertsSecret: ""

persistence:
  enabled: true

  existingClaim: ""

  storageClass: ""
  volumeName: ""
  accessMode: ReadWriteOnce
  size: 20Gi

  subPath: ""

service:
  type: ClusterIP
  clusterIP: ~
  port: "9000"
  nodePort: 32000
  loadBalancerIP: ~

  externalTrafficPolicy: Cluster

consoleService:
  type: ClusterIP
  clusterIP: ~
  port: "9001"
  nodePort: 32001
  loadBalancerIP: ~

  externalTrafficPolicy: Cluster

securityContext:
  enabled: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: "OnRootMismatch"
  readOnlyRootFilesystem: false

resources:
  requests:
    memory: 16Gi

makePolicyJob:
  securityContext:
    enabled: false
    runAsUser: 1000
    runAsGroup: 1000
  resources:
    requests:
      memory: 128Mi
  exitCommand: ""

users:
  - accessKey: console
    secretKey: console123
    policy: consoleAdmin

makeUserJob:
  securityContext:
    enabled: false
    runAsUser: 1000
    runAsGroup: 1000
  resources:
    requests:
      memory: 128Mi
  exitCommand: ""

makeServiceAccountJob:
  securityContext:
    enabled: false
    runAsUser: 1000
    runAsGroup: 1000
  resources:
    requests:
      memory: 128Mi
  exitCommand: ""

buckets:
  - name: lakehouse-data
  - name: metastore
  - name: trino

makeBucketJob:
  securityContext:
    enabled: false
    runAsUser: 1000
    runAsGroup: 1000
  resources:
    requests:
      memory: 128Mi
  exitCommand: ""

customCommands:
customCommandJob:
  securityContext:
    enabled: false
    runAsUser: 1000
    runAsGroup: 1000
  resources:
    requests:
      memory: 128Mi
  exitCommand: ""

postJob:
  securityContext:
    enabled: false
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000

serviceAccount:
  create: true
  name: "minio-sa"

metrics:
  serviceMonitor:
    enabled: false
    includeNode: false
    public: true
    namespace: ~
    interval: ~
    scrapeTimeout: ~
